#include "events.hpp"
#include <string>

namespace NeverForgetBot::Events {

    void send_event(TgBot::Bot& bot, long chat_id, const Event& event) {
        std::string status_str;

        switch (event.status) {
            case EventStatus::PENDING:
                status_str = "–í –æ–∂–∏–¥–∞–Ω–∏–∏";
                break;
            case EventStatus::COMPLETED:
                status_str = "–ó–∞–≤–µ—Ä—à–µ–Ω–æ";
                break;
            case EventStatus::NOT_COMPLETED:
                status_str = "–ù–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ";
                break;
            case EventStatus::DELETED:
                status_str = "—É–¥–∞–ª–µ–Ω–Ω–æ";
                break;
        }

        std::string confirmation_message =
            "–°–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ:\n\n*" +
            event.name + "*\n" +
            "–í—Ä–µ–º—è: " + event.time + "\n" +
            "–°—Ç–∞—Ç—É—Å: " + status_str;

        bot.getApi().sendMessage(chat_id, confirmation_message, nullptr, nullptr, nullptr, "Markdown");
    }

    void send_events(TgBot::Bot& bot, long chat_id, const std::vector<Event>& events,Database &db) {
        if (events.empty()) {
            bot.getApi().sendMessage(chat_id, "–ù–µ—Ç –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Å–æ–±—ã—Ç–∏–π. –°–∞–º–æ–µ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ üôÇ.");
            return;
        }

        std::string message = "–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è:\n\n";

        for (const auto& event : events) {
            std::string status_str;

            switch (event.status) {
                case EventStatus::PENDING:
                    status_str = "–≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è";
                    break;
                case EventStatus::COMPLETED:
                    status_str = "–∑–∞–≤–µ—Ä—à–µ–Ω–æ";
                    break;
                case EventStatus::NOT_COMPLETED:
                    status_str = "–Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ";
                    break;
                case EventStatus::DELETED:
                    status_str = "—É–¥–∞–ª–µ–Ω–æ";
                    break;
            }

            message +=
                "*" + event.name + "*\n" +
                "–î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è: " + Utils::formatTimeWithTimezone(chat_id, event.time, db).value_or(event.time) + "\n" +
                "–°—Ç–∞—Ç—É—Å: " + status_str + "\n\n";

            
            TgBot::InlineKeyboardMarkup::Ptr keyboard(new TgBot::InlineKeyboardMarkup);

        
            TgBot::InlineKeyboardButton::Ptr doneButton(new TgBot::InlineKeyboardButton);
            doneButton->text = "‚úÖ Done";
            doneButton->callbackData = "upcomming-event-done-" + event.id;


            TgBot::InlineKeyboardButton::Ptr deleteButton(new TgBot::InlineKeyboardButton);
            deleteButton->text = "‚ùå Delete";
            deleteButton->callbackData = "upcomming-event-delete-" + event.id;

    
            std::vector<TgBot::InlineKeyboardButton::Ptr> row = {doneButton, deleteButton};
            keyboard->inlineKeyboard.push_back(row);

            // Send message with inline keyboard
            bot.getApi().sendMessage(
                chat_id,
                message,
                nullptr,  
                nullptr,    
                keyboard,  
                "Markdown"
            );
        }
}



} // namespace NeverForgetBot::Events
